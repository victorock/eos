---
- name: match interface sections
  pattern_match:
    regex: "^interface .+"
    match_all: yes
    match_greedy: yes
  register: context

- name: match interface values
  pattern_group:
    - name: match name
      pattern_match:
        regex: "^interface (\\S+)"
        content: "{{ item }}"
      register: name

    - name: match description
      pattern_match:
        regex: "description (.+)"
        content: "{{ item }}"
      register: description

    - name: match admin state
      pattern_match:
        regex: "(shutdown)"
        content: "{{ item }}"
      register: enabled

    - name: match ip address
      pattern_match:
        regex: "ip address (\\S+)/(\\d+)"
        content: "{{ item }}"
      register: ipaddr

    - name: match ip address dhcp
      pattern_match:
        regex: "ip address (dhcp)"
        content: "{{ item }}"
      register: dhcp

  loop: "{{ context }}"
  register: matches

- name: template entries
  json_template:
    template:
      - key: "{{ item.name.matches.0 }}"
        object:
          - key: description
            value: "{{ item.description.matches.0 }}"
          - key: enabled
            value: "{{ not item.enabled.matches }}"
          - key: ipv4
            object:
              - key: address
                value: "{{ item.ipaddr.matches.0 }}"
              - key: netmask
                value: "{{ item.ipaddr.matches.1 }}"
              - key: dhcp
                value: "{{ item.dhcp.matches != None }}"
  loop: "{{ matches }}"
  register: interfaces
  extend: arista_eos.config
  export: yes
  export_as: dict
